variable "resource_type" {
  description = "The resource type"
  type        = string
  validation {
    condition = (
      contains(["google_compute_security_policy",
        "google_compute_instance",
        "google_container_cluster",
        "google_compute_firewall",
        "google_dns",
        "google_dns_managed_zone",
        "google_dns_record_set",
        "google_dns_policy",
        "google_cloudbuild_worker_pool",
        "google_sql_database_instance",
        "google_sql_database",
        "google_project",
        "google_service_account",
        "google_folder",
        "google_compute_network",
        "google_compute_subnetwork",
        "google_compute_router",
        "google_storage_bucket",
        "google_artifact_registry_repository",
        "google_secret_manager_secret",
        "google_kms_key_ring",
        "google_kms_crypto_key",
        "mongodb_atlas_cluster",
        "google_compute_image",
        "google_compute_managed_ssl_certificate",
        "google_compute_external_vpn_gateway",
        "google_compute_ha_vpn_gateway",
        "google_compute_vpn_tunnel",
        "google_compute_router_interface",
        "google_compute_router_peer",
        "google_compute_instance_group",
        "internal_load_balancer",
        "external_load_balancer",
        "google_compute_network_endpoint",
        "google_compute_network_endpoint_group",
        "google_container_node_pool",
        "google_compute_global_address",
        "confluent_kafka_cluster",
        "google_compute_address",
        "compute_forwarding_rule",
        "confluent_network",
        "confluent_private_link_access",
        "panos_panorama_service_object",
        "google_bigquery_dataset",
        "google_logging_folder_sink",
        "panos_nat_rule_group",
        "kibana_cluster",
        "elasticsearch_cluster",
        "influx_db",
        "filebeat",
        "logstash",
        "ec_deployment"],
      var.resource_type) == true
    )
    error_message = "The resource_type must match one of the allowed values."
  }
}

locals {
  resource_type_map = {
    "google_compute_security_policy"         = "csp",
    "google_compute_instance"                = "cin",
    "google_dns"                             = "dns",
    "google_dns_managed_zone"                = "dmz",
    "google_dns_record_set"                  = "drs",
    "google_dns_policy"                      = "dpl",
    "google_sql_database_instance"           = "dbi",
    "google_sql_database"                    = "sql",
    "google_project"                         = "prj",
    "google_service_account"                 = "sa",
    "google_cloudbuild_worker_pool"          = "cbp",
    "google_folder"                          = "fld",
    "google_compute_firewall"                = "gcf",
    "google_container_cluster"               = "gke",
    "google_compute_network"                 = "vpc",
    "google_compute_router"                  = "rtr",
    "google_compute_subnetwork"              = "sub",
    "google_storage_bucket"                  = "gcs",
    "google_artifact_registry_repository"    = "arr",
    "google_secret_manager_secret"           = "sec",
    "google_kms_key_ring"                    = "krg",
    "google_kms_crypto_key"                  = "cpt",
    "mongodb_atlas_cluster"                  = "mdb",
    "google_compute_image"                   = "gci",
    "google_compute_managed_ssl_certificate" = "gcr",
    "google_compute_external_vpn_gateway"    = "xgtw",
    "google_compute_ha_vpn_gateway"          = "gtw",
    "google_compute_vpn_tunnel"              = "tnl",
    "google_compute_router_interface"        = "rtrinf",
    "google_compute_router_peer"             = "rtrpr",
    "google_compute_instance_group"          = "cig",
    "internal_load_balancer"                 = "ilb",
    "external_load_balancer"                 = "xlb",
    "google_compute_network_endpoint"        = "nep",
    "google_compute_network_endpoint_group"  = "neg",
    "google_container_node_pool"             = "gkp",
    "google_compute_global_address"          = "cga",
    "confluent_kafka_cluster"                = "ckc",
    "google_compute_address"                 = "gca",
    "compute_forwarding_rule"                = "cfr",
    "confluent_network"                      = "ckn",
    "confluent_private_link_access"          = "pla",
    "panos_panorama_service_object"          = "svc",
    "google_bigquery_dataset"                = "gbd",
    "google_logging_folder_sink"             = "gls",
    "panos_nat_rule_group"                   = "nat",
    "kibana_cluster"                         = "kbc",
    "elasticsearch_cluster"                  = "esc",
    "influx_db"                              = "ifd",
    "filebeat"                               = "fbt",
    "logstash"                               = "log",
    "ec_deployment"                          = "ecd" 
  }
  resource_type_abbr = local.resource_type_map[var.resource_type]
}
